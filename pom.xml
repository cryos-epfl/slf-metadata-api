<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.slf.pro.pgdata</groupId>
	<artifactId>station-api</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<parent>
		<groupId>ch.slf.pro</groupId>
		<artifactId>slfpro-parent</artifactId>
		<version>1.0.0</version>
	</parent>

	<description>Rest services for SDBOpg metadata access</description>

	<properties>
		<tomcat.version>8.0.3</tomcat.version>
		<buildtime>${maven.build.timestamp}</buildtime>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<compiler.version>1.8</compiler.version>
		<platform.version>1.2.0</platform.version>
	</properties>

	<profiles>
		<profile>
			<!-- m2e doesn't set the build time so we need a hack -->
			<id>m2e</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<properties>
				<buildtime>not set by m2e</buildtime>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>station-api</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${compiler.version}</source>
					<target>${compiler.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.1.2</version>
				<configuration>
					<container>
						<containerId>tomcat7x</containerId>
						<type>remote</type>
					</container>
					<configuration>
						<type>runtime</type>
						<properties>
							<cargo.server.settings>${server.profile}</cargo.server.settings>
						</properties>
					</configuration>
				</configuration>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.9</version>
			</extension>
		</extensions>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	<distributionManagement>
		<repository>
			<id>maven.wd.op</id>
			<url>scp://maven.wd.op:/home/lwp/maven2</url>
		</repository>
		<snapshotRepository>
			<id>maven.wd.op-SNAPSHOT</id>
			<url>scp://maven.wd.op:/home/lwp/maven2-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ch.slf.pro</groupId>
				<artifactId>platform</artifactId>
				<version>${platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>maven.wd.op</id>
			<name>Local SLF Developement Repository</name>
			<url>http://maven.wd.op/maven2</url>
		</repository>
		<repository>
			<id>maven.wd.op-snapshots</id>
			<name>Local SLF Developement Repository</name>
			<url>http://maven.wd.op/maven2-snapshots</url>
		</repository>
		<!--<repository>-->
			<!--<id>Hibernate Spatial repo</id>-->
			<!--<url>http://www.hibernatespatial.org/repository</url>-->
		<!--</repository>-->
		<repository>
			<id>OSGEO GeoTools repo</id>
			<url>http://download.osgeo.org/webdav/geotools</url>
		</repository>
		<repository>
			<id>jcenter-snapshots</id>
			<name>jcenter</name>
			<url>https://jcenter.bintray.com/</url>
		</repository>
		<repository>
			<id>opengeo</id>
			<name>OpenGeo Maven Repository</name>
			<url>http://repo.boundlessgeo.com/main</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Hibernate and JDBC -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>org.hibernate</groupId>-->
			<!--<artifactId>hibernate-c3p0</artifactId>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.hibernate</groupId>-->
			<!--<artifactId>hibernate-spatial</artifactId>-->
			<!--&lt;!&ndash; this is a hack, because the used dependency is not available in any -->
				<!--repository, since we do not use postgis, I simply exclude this dependency -->
				<!--instead of installing it into the local repo &ndash;&gt;-->
			<!--<exclusions>-->
				<!--<exclusion>-->
					<!--<artifactId>postgis-jdbc</artifactId>-->
					<!--<groupId>org.postgis</groupId>-->
				<!--</exclusion>-->
			<!--</exclusions>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>com.oracle</groupId>-->
			<!--<artifactId>ojdbc6</artifactId>-->
		<!--</dependency>-->

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4.1211.jre7</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		
		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		
		 <!--Spring security-->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		
		<!-- SLF -->
		<dependency>
			<groupId>ch.slf.pro.common</groupId>
			<artifactId>util</artifactId>
		</dependency>
		
		<!-- Apache commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		
		<!-- Other -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>jts</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.extended</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opengeo</groupId>
			<artifactId>geodb</artifactId>
			<version>0.8</version>
		</dependency>
		<dependency>
			<groupId>org.opensaml</groupId>
			<artifactId>openws</artifactId>
			<version>1.4.2-1</version>
		</dependency>

		<!-- GeoJson POJOs for Jackson-->
		<dependency>
			<groupId>de.grundid.opendatalab</groupId>
			<artifactId>geojson-jackson</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-guava</artifactId>
			<version>2.6.7</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<name>SlfPro</name>
	<url>http://pro.slf.ch</url>
	<organization>
		<name>SLF</name>
		<url>http://www.slf.ch</url>
	</organization>
	<!--<scm>-->
		<!--<developerConnection>scm:svn:https://svn.slf.local/repos/wis/slfpro/archetype/component/tags/component-1.1.1</developerConnection>-->
	<!--</scm>-->
</project>
